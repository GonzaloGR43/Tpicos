<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>